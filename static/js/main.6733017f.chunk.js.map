{"version":3,"sources":["app/api.js","app/reducers/matchesSlice.js","components/MatchSnippet/MatchSnippet.component.js","app/selectors/matchesSelector.js","components/MatchesContainer/MatchesContainer.component.js","components/CompetitionSnippet/CompetitionSnippet.component.js","components/CompetitionsContainer/CompetitionsContainer.component.js","App.js","app/store.js","index.js"],"names":["getAllMatchesApi","a","axios","get","getMatchesAsync","createAsyncThunk","then","response","data","matchesSlice","createSlice","name","initialState","matches","selectedCompetitions","reducers","selectCompetition","state","action","push","parseInt","payload","unselectCompetition","filter","item","extraReducers","fulfilled","actions","toggleCompetition","MatchSnippet","props","useState","open","setOpen","ListGroup","Item","onClick","className","match","title","Collapse","in","dangerouslySetInnerHTML","__html","embed","getSelectedCompetitionsMatches","createSelector","includes","competition","id","getAllCompetitions","map","comp","pos","arr","indexOf","MatchesContainer","slice","useSelector","class","key","CompetitionSnippet","dispatch","useDispatch","isSelected","variant","CompetitionsContainer","App","useEffect","Container","fluid","Row","Col","xs","lg","Jumbotron","configureStore","reducer","matchesReducer","middleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.6733017f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport async function getAllMatchesApi() {\r\n  return await axios.get('https://www.scorebat.com/video-api/v1/');\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { getAllMatchesApi } from '../api';\r\n\r\nexport const getMatchesAsync = createAsyncThunk('matches/getAllMatches', async () => {\r\n    return await getAllMatchesApi().then(response => response.data);\r\n  }\r\n);\r\n\r\nexport const matchesSlice = createSlice({\r\n  name: 'matches',\r\n  initialState: {\r\n    matches: [],\r\n    selectedCompetitions: [],\r\n  },\r\n  reducers: {\r\n    selectCompetition: (state, action) => {\r\n        state.selectedCompetitions.push(parseInt(action.payload));\r\n    },\r\n    unselectCompetition: (state, action) => {\r\n        state.selectedCompetitions = state.selectedCompetitions.filter(item => item !== parseInt(action.payload));\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [getMatchesAsync.fulfilled]: (state, action) => {\r\n      state.matches = action.payload;\r\n      \r\n    }\r\n  },\r\n});\r\n\r\nexport const { selectCompetition, unselectCompetition, toggleCompetition } = matchesSlice.actions;\r\n\r\nexport default matchesSlice.reducer;","import React, { useState } from 'react';\r\nimport { ListGroup, Collapse } from 'react-bootstrap';\r\n\r\nexport default function MatchSnippet(props) {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <ListGroup.Item action onClick={() => setOpen(!open)}>\r\n                <div className=\"d-flex justify-content-center p-1\">\r\n                    {props.match.title}\r\n                </div>\r\n                <Collapse in={open}>\r\n                <div\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: props.match.embed\r\n                    }}></div>\r\n                </Collapse>\r\n            </ListGroup.Item>\r\n        </>\r\n    );\r\n}","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getAllMatches = createSelector(\r\n    state => state.matches.matches,\r\n    matches => matches\r\n)\r\n\r\nexport const getSelectedCompetitionsMatches = createSelector(\r\n    state => state.matches.matches,\r\n    state => state.matches.selectedCompetitions,\r\n    (matches, selectedCompetitions) => {\r\n        return matches.filter(a => selectedCompetitions.includes(a.competition.id));\r\n    }\r\n)\r\n\r\nexport const getAllCompetitions = createSelector(\r\n    state => state.matches.matches,\r\n    matches => {\r\n        return matches.map(match => match.competition).filter((comp, pos, arr) => {\r\n            return arr.map(comp => comp.id).indexOf(comp.id) === pos;\r\n        });\r\n    }\r\n)","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport MatchSnippet from '../MatchSnippet/MatchSnippet.component';\r\nimport { getSelectedCompetitionsMatches } from '../../app/selectors/matchesSelector';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nexport default function MatchesContainer() {\r\n    const slice = useSelector(state => state);\r\n    return (\r\n        <>\r\n            <p className=\"lead\">Matches</p>\r\n            <hr class=\"my-3\"/>\r\n            <ListGroup>\r\n                {slice && getSelectedCompetitionsMatches(slice).map(match => (\r\n                    <MatchSnippet key={match.title} match={match}></MatchSnippet>\r\n                ))}\r\n            </ListGroup>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCompetition, unselectCompetition } from '../../app/reducers/matchesSlice';\r\n\r\nexport default function CompetitionSnippet(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const isSelected = useSelector(state => state.matches.selectedCompetitions).includes(props.competition.id);\r\n    const variant = isSelected ? 'primary' : 'light';\r\n\r\n    function toggle() {\r\n        isSelected ? dispatch(unselectCompetition(props.competition.id)) : dispatch(selectCompetition(props.competition.id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ListGroup.Item onClick={() => toggle()} action variant={variant}>\r\n            <div className=\"d-flex justify-content-center\">\r\n                {props.competition.name}\r\n            </div>\r\n        </ListGroup.Item>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CompetitionSnippet from '../CompetitionSnippet/CompetitionSnippet.component';\r\nimport { getAllCompetitions } from '../../app/selectors/matchesSelector';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nexport default function CompetitionsContainer() {\r\n    const slice = useSelector(state => state);\r\n    return (\r\n        <>\r\n            <p className=\"lead\">Competitions</p>\r\n            <hr class=\"my-3\"/>\r\n            <ListGroup variant=\"flush\">\r\n                {slice && getAllCompetitions(slice).map(competition => (\r\n                    <CompetitionSnippet key={competition.id} competition={competition}></CompetitionSnippet>\r\n                ))}\r\n            </ListGroup>\r\n        </>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getMatchesAsync } from './app/reducers/matchesSlice';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport MatchesContainer from './components/MatchesContainer/MatchesContainer.component';\r\nimport CompetitionsContainer from './components/CompetitionsContainer/CompetitionsContainer.component';\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getMatchesAsync());\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid className=\"p-4\">\r\n    <Row className=\"justify-content-md-center\">\r\n      <Col xs lg=\"2\"/>\r\n      <Col xs lg=\"5\">\r\n        <Jumbotron>\r\n          <MatchesContainer></MatchesContainer>\r\n        </Jumbotron>\r\n      </Col>\r\n      <Col xs lg=\"3\">\r\n        <Jumbotron>\r\n          <CompetitionsContainer></CompetitionsContainer>\r\n        </Jumbotron>\r\n      </Col>\r\n      <Col xs lg=\"2\"/>\r\n    </Row>\r\n  </Container>\r\n  );\r\n}","import { configureStore } from '@reduxjs/toolkit';\r\nimport matchesReducer from './reducers/matchesSlice';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    matches: matchesReducer,\r\n    middleware: [thunk]\r\n  }\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}